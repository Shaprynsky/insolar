package main

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestParseYaml(t *testing.T) {
	yaml := ""
	buffer, err := parseYaml([]byte(yaml))
	assert.NoError(t, err)
	assert.Equal(t, buffer.String(), "// Code generated by \"go run template.go\"; DO NOT EDIT.\n\npackage manager\n\nfunc (vm *VersionManager) loadVersionTable() {\n\treturn\n}")
	yaml = "versiontable:"
	buffer, err = parseYaml([]byte(yaml))
	assert.NoError(t, err)
	assert.Equal(t, buffer.String(), "// Code generated by \"go run template.go\"; DO NOT EDIT.\n\npackage manager\n\nfunc (vm *VersionManager) loadVersionTable() {\n\treturn\n}")

	yaml = `versiontable:
  insolar:
    startversion: v1.1.1
    description: Version manager for Insolar platform test
`
	buffer, err = parseYaml([]byte(yaml))
	assert.NoError(t, err)
	assert.Equal(t, "// Code generated by \"go run template.go\"; DO NOT EDIT.\n\npackage manager\n\nimport (\n\t\"github.com/insolar/insolar/log\"\n)\n\nfunc (vm *VersionManager) loadVersionTable() {\n\tvar err error\n\n\tvm.VersionTable[\"insolar\"], err = NewFeature(\"insolar\",\"v1.1.1\", \"Version manager for Insolar platform test\")\n\tif(err!=nil){\n\t\tlog.Warn(\"Error loading from versiontable.yml, verify structure, key='insolar', startVersion='v1.1.1', message: \"+ err.Error())\n\t}\n\n\treturn\n}", buffer.String())
	buffer, err = parseYaml([]byte{1, 2, 3, 4})
	assert.Error(t, err)

}
